#!/usr/bin/python3
from base64 import b64encode,b64decode
from random import choice,choices,shuffle
from string import ascii_letters

def segmenter(string,minlen=10,maxlen=20):
    '''iterates through given string and segments the string into randomized size
    between "minlen" and "maxlen". Giving it a key to associate to it for later.
    returns a dictinary of key(random_str):value(segmented string)'''

    dic={}
    while len(string) > 0:
        key_len   = choice(range(3,7))
        value_len = choice(range(minlen,maxlen))
        segment   = string[:value_len]
        string    = string.replace(segment,'',1)
        key       = ''.join(choices(ascii_letters,k=key_len))
        while key in dic:
            key=''.join(choices(ascii_letters,k=key_len))
        dic[key]=segment
    return dic

intro='''
    welcome to segmenter.py
type the following to segment a file
--file <filename>   
or just paste the oneliner below:
'''
print('\n'*100)
userinput = input(intro)

if '--file' == userinput[:6].lower():
    filename=userinput.split()[-1]
    with open(filename,'rb') as f:
        payload=f.read().strip()
    payload = b64encode(payload).decode()
else:
    payload = b64encode(userinput.strip().encode('utf-8')).decode()

obf_dic=segmenter(payload)
scrabled_list=list(obf_dic.keys())
shuffle(scrabled_list)

dim_list = ','.join(scrabled_list)
values   = '\n'.join(['    {} = "{}"'.format(k,obf_dic[k]) for k in scrabled_list])
deobf    = b64decode(''.join(obf_dic.values())).decode()
s_values = ' + '.join(obf_dic.keys())

product=f"""\
    'declare variables:
    Dim {dim_list}

    'scrabled values:
{values}

    'dim payload
    payload = {s_values}

payload after deobfucation:
{deobf}
"""
print(product)
